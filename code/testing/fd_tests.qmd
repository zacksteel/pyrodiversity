---
title: "fd_tests"
format: html
editor: visual
---

## Testing improvements to the function diversity functions

Load packages and functions

```{r}
library(tidyverse)
library(sf)
library(terra)
library(tictoc)
library(here)
library(mapview)

source(here("code/global_fd.R"))
```

## Testing focal_fd as a wrapper for global_fd approach

```{r}
## read in trait surfaces for one huc
hucs <- read_sf("../../data/spatial/yose_sheds.shp")
hmr = filter(hucs, Name == "Headwaters Merced River")
id <- hmr$HUC10

## read in trait rasters and simplify a bit
mround <- function(x, base, digits){
      base*round(x/base, digits = digits)
} 

fri_r <- rast(paste0("../../data/spatial/yose_fri/fri_", id, ".tif")) %>% 
  round(digits = 0)
sev_r <- here(paste0("data/spatial/yose_sev/sev_", id, ".tif")) %>% 
  rast() %>% 
  mround(base = 5, digits = 1)


## Let's grid this huc and pull out one piece to start
grd <- st_make_grid(hmr, n = 10)

plot(fri_r)
plot(vect(grd), add = T)
plot(vect(grd[4]), add = T, col = 'red')

## take a middle box as a subset landscape
lnd <- grd[4]

## create a point grid for each raster pixel
r <- crop(fri_r, vect(lnd))
r.pts <- as.points(r) #12875 points (103 x 125 raster grid)

## cropped rasters for below
fri_r2 <- r
sev_r2 <- crop(sev_r, vect(lnd))

plot(r)
plot(r.pts, add = T, cex = 0.1)
```

now I need to run point_fd or global_fd on all of these raster points and then map back to the input raster. Let's see how slow this would be to run through point_fd. Takes 10.6 minutes to run through 12,875 points w/ a 100m radius and two equally weighted traits. 1000m radius maybe takes 3x as long?

```{r}
source(here("code/point_fd.R"))

## subset (one row) of points first; goes plenty fast
pts0 <- r.pts[1:125]

tic()
fd100 <- point_fd(
  points = pts0,
  traits = c(fri_r2, sev_r2),
  tr_wt = c(2,1),
  land_radius <- 1000,
  proot = "C:/Users/zacks/Documents/repos/02_Public/pyrodiversity"
)
toc()

## map back to a raster
r.fdis <- rast(fri_r2, vals = fd100$FDis)
```

Let's test the new version of focal_fd

```{r}
source(here("code/focal_fd.R"))
source(here("code/point_fd.R"))

## subset (one row) of points first; goes plenty fast
# pts0 <- r.pts[1:125]

tic()
out <- focal_fd(traits = c(fri_r2, sev_r2), #a list of rasters (SpatRaster) with the same extent and resolution
                    tr_wt = c(2,1), # relative weights for traits if using the FD package
                    metric = "FDis", #character vector of FD metrics to return. Options: 'nbsp', 'FRic', 'FEve', 'FDis'
                    land_radius = 100, # radius of the local landscape to consider for functional diversity, units are those of the length unit of the trait crs (usually meters)
                    frich = F, #logical, whether to also calculate function richness
                    pca_axes = "max", #number of PC dimensions to use when calculating FRic
                    mask_lyr = NULL, #optional mask layer path (e.g. remove non-flammable areas)
                    proot = "C:/Users/zacks/Documents/repos/02_Public/pyrodiversity", #optional project root needed to load point_fd and global_fd.R; temporary work around until this is a formal package
                    cores = 1, #number of cores to use for parallel processing
                    batch_size = 5000, #number of cells to process in each batch if cores > 1
                    # method = "fundiversity",
                    # na_replacement = T, #fundiversity will drop species that contain NAs; if TRUE na's will be replaced with the trait means
                    out_raster = paste0(proot,"/data/scratch/test.tif")
                    )
toc()

```

## Building out a point_fd function

```{r}
## read in trait surfaces for one huc
hucs <- read_sf("../../data/spatial/yose_sheds.shp")
hmr = filter(hucs, Name == "Headwaters Merced River")
id <- hmr$HUC10

## let's make some sample points
pts0 <- st_sample(hmr, size = 30, type = "regular")
st_crs(pts0) <- st_crs(hmr)

## function parameters
# points # sf or vect object of points
  # traits #vector of paths to trait rasters or rast objects
  # tr_wt # relative weights for traits
# land_radius # radius of the local landscape to consider for functional diversity, units are those of the length unit of the trait crs
  # frich = F #logical, whether to also calculate function richness
  # pca_axes = "max" #number of PC dimensions to use when calculating FRic
  # mask = NULL #optional mask layer path (e.g. remove non-flammable areas)

mround <- function(x, base, digits){
      base*round(x/base, digits = digits)
} 

fri_r <- rast(paste0("../../data/spatial/yose_fri/fri_", id, ".tif")) %>% 
  round(digits = 0)
sev_r <- here(paste0("data/spatial/yose_sev/sev_", id, ".tif")) %>% 
  rast() %>% 
  mround(base = 5, digits = 1)
pat_r <- here(paste0("data/spatial/yose_pat/pat_", id, ".tif")) %>% 
  rast() %>% 
  round(digits = 0)



## testing
source(here("code/point_fd.R"))

fd100 <- point_fd(
  points <- pts0,
  traits <- c(fri_r, sev_r, pat_r),
  tr_wt <- NULL,
  land_radius <- 100,
  frich <- F,
  pca_axes <- "max",
  mask <- NULL
)

tic() #1.2 sec
fd500  <- point_fd(
  points <- pts0,
  traits <- c(fri_r, sev_r, pat_r),
  tr_wt <- NULL,
  land_radius <- 500,
  frich <- F,
  pca_axes <- "max",
  mask <- NULL
)
toc()

tic() #2.11 sec
fd1000  <- point_fd(
  points <- pts0,
  traits <- c(fri_r, sev_r, pat_r),
  tr_wt <- NULL,
  land_radius <- 1000,
  frich <- F,
  pca_axes <- "max",
  mask <- NULL
)
toc()

fd50 <- point_fd(
  points <- pts0,
  traits <- c(fri_r, sev_r, pat_r),
  tr_wt <- NULL,
  land_radius <- 50,
  frich <- F,
  pca_axes <- "max",
  mask <- NULL
)

trash <- bind_cols(pts0, fd100) %>% 
  st_as_sf()
plot(sev_r)
plot(trash[,"FDis"], add = T)
```

The code above returns NA values when there is no variation among any of the traits within the defined radius. Depending on the metric we may want to consider this zero (e.g., FDis) whereas for others it may make sense to keep it as NA (FEve)

## Adding weights agrument to FD functions

```{r}
## read in trait surfaces for one huc
hucs <- read_sf("../../data/spatial/yose_sheds.shp")
id = filter(hucs, Name == "Headwaters Tuolumne River")$HUC10

mround <- function(x, base, digits){
      base*round(x/base, digits = digits)
} 
  
fri_r <- rast(paste0("../../data/spatial/yose_fri/fri_", id, ".tif")) %>% 
  round(digits = 0)
sea_r <- rast(paste0("../../data/spatial/yose_sea/sea_", id, ".tif")) %>% 
  round(digits = 1)

sev_r <- here(paste0("data/spatial/yose_sev/sev_", id, ".tif")) %>% 
  rast() %>% 
  mround(base = 5, digits = 1)
pat_r <- here(paste0("data/spatial/yose_pat/pat_", id, ".tif")) %>% 
  rast() %>% 
  round(digits = 0)

## Calculate pyrodiversity for each watershed with equal weights
tic()
d <- global_fd(traits = c(fri_r, sev_r, pat_r) #vector of paths or rast files
             )
toc()

## Now with different weights
d123 <- global_fd(traits = c(fri_r, sev_r, pat_r),
               tr_wt = c(1,2,3))
d010 <- global_fd(traits = c(fri_r, sev_r, pat_r),
               tr_wt = c(0,1,0))
```
